package com.ar.facturacion.model;
// Generated 02/02/2020 19:45:42 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario",catalog="tesis")
public class Usuario  implements java.io.Serializable {
     private Integer idUsuario;
     private Rol rol;
     private String nomUsuario;
     private String clave;
     private Integer usuarioAdmin;
     private Date fchModificacion;
     private List<Cbtesasoc> cbtesasocs = new ArrayList<Cbtesasoc>();

    public Usuario() {
    }

	
    public Usuario(Integer idUsuario, Rol rol, String nomUsuario, String clave, Integer usuarioAdmin, Date fchModificacion) {
        this.idUsuario = idUsuario;
        this.rol = rol;
        this.nomUsuario = nomUsuario;
        this.clave = clave;
        this.usuarioAdmin = usuarioAdmin;
        this.fchModificacion = fchModificacion;
    }
    public Usuario(Integer idUsuario, Rol rol, String nomUsuario, String clave, Integer usuarioAdmin, Date fchModificacion, List<Cbtesasoc> cbtesasocs) {
       this.idUsuario = idUsuario;
       this.rol = rol;
       this.nomUsuario = nomUsuario;
       this.clave = clave;
       this.usuarioAdmin = usuarioAdmin;
       this.fchModificacion = fchModificacion;
       this.cbtesasocs = cbtesasocs;
    }
   
    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="idUsuario", unique=true)
    public Integer getIdUsuario() {
        return this.idUsuario;
    }
    
    public void setIdUsuario(Integer idUsuario) {
        this.idUsuario = idUsuario;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idRol", nullable=false)
    public Rol getRol() {
        return this.rol;
    }
    
    public void setRol(Rol rol) {
        this.rol = rol;
    }

    
    @Column(name="nomUsuario", nullable=false, length=50)
    public String getNomUsuario() {
        return this.nomUsuario;
    }
    
    public void setNomUsuario(String nomUsuario) {
        this.nomUsuario = nomUsuario;
    }

    
    @Column(name="clave", nullable=false)
    public String getClave() {
        return this.clave;
    }
    
    public void setClave(String clave) {
        this.clave = clave;
    }

    
    @Column(name="usuarioAdmin", nullable=false)
    public Integer getUsuarioAdmin() {
        return this.usuarioAdmin;
    }
    
    public void setUsuarioAdmin(Integer usuarioAdmin) {
        this.usuarioAdmin = usuarioAdmin;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fchModificacion")
    public Date getFchModificacion() {
        return this.fchModificacion;
    }
    
    public void setFchModificacion(Date fchModificacion) {
        this.fchModificacion = fchModificacion;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public List<Cbtesasoc> getCbtesasocs() {
        return this.cbtesasocs;
    }
    
    public void setCbtesasocs(List<Cbtesasoc> cbtesasocs) {
        this.cbtesasocs = cbtesasocs;
    }




}


