package com.ar.facturacion.model;
// Generated 02/02/2020 19:45:42 by Hibernate Tools 4.3.1


import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name="producto",catalog="tesis")
public class Producto  implements Serializable {
     private Integer idProducto;
     private Categoria categoria;
     private String nomProducto;
     private String marca;
     private int cantidadXunidad;
     private int unidadEnStock;
     private double precioCompra;
     private double precioVenta;
     private double oferta;
     private String descripcion;
     private Date fechaVto;
     private Date lastUpdate;
     private int userUpdate;
     private List<Tributos> tributos = new ArrayList<Tributos>();
     private List<Iva> ivas = new ArrayList<Iva>();
     private List<Detalle> detalles = new ArrayList<Detalle>();

    public Producto() {
    }

	
    public Producto(Categoria categoria, String nomProducto, String marca, int cantidadXunidad, int unidadEnStock, double precioCompra, double precioVenta, double oferta, String descripcion, Date lastUpdate, int userUpdate) {
        this.categoria = categoria;
        this.nomProducto = nomProducto;
        this.marca = marca;
        this.cantidadXunidad = cantidadXunidad;
        this.unidadEnStock = unidadEnStock;
        this.precioCompra = precioCompra;
        this.precioVenta = precioVenta;
        this.oferta = oferta;
        this.descripcion = descripcion;
        this.lastUpdate = lastUpdate;
        this.userUpdate = userUpdate;
    
    }
    public Producto(Categoria categoria, String nomProducto, String marca, int cantidadXunidad, int unidadEnStock, double precioCompra, double precioVenta, double oferta, String descripcion, Date fechaVto, Date lastUpdate, int userUpdate,List<Tributos> tributos, List<Iva> ivas, List<Detalle> detalles) {
       this.categoria = categoria;
       this.nomProducto = nomProducto;
       this.marca = marca;
       this.cantidadXunidad = cantidadXunidad;
       this.unidadEnStock = unidadEnStock;
       this.precioCompra = precioCompra;
       this.precioVenta = precioVenta;
       this.oferta = oferta;
       this.descripcion = descripcion;
       this.fechaVto = fechaVto;
       this.lastUpdate = lastUpdate;
       this.userUpdate = userUpdate;
       this.ivas = ivas;
       this.detalles = detalles;
       this.tributos = tributos;
    }
   
    
    @Id 
    @Column(name="idProducto", unique=true)
    public Integer getIdProducto() {
        return this.idProducto;
    }
    
    public void setIdProducto(Integer idProducto) {
        this.idProducto = idProducto;
    }
    @ManyToOne(fetch=FetchType.LAZY, optional = false)
    //@org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.ALL)
    @JoinColumn(name="categoria")
    public Categoria getCategoria() {
        return this.categoria;
    }
    
    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="producto")
    public List<Tributos> getTributos() {
        return this.tributos;
    }
    
    public void setTributos(List<Tributos> tributos) {
        this.tributos = tributos;
    }

    
    @Column(name="nomProducto", nullable=false, length=100)
    public String getNomProducto() {
        return this.nomProducto;
    }
    
    public void setNomProducto(String nomProducto) {
        this.nomProducto = nomProducto;
    }

    
    @Column(name="marca", nullable=false, length=50)
    public String getMarca() {
        return this.marca;
    }
    
    public void setMarca(String marca) {
        this.marca = marca;
    }

    
    @Column(name="cantidadXunidad", nullable=false)
    public int getCantidadXunidad() {
        return this.cantidadXunidad;
    }
    
    public void setCantidadXunidad(int cantidadXunidad) {
        this.cantidadXunidad = cantidadXunidad;
    }

    
    @Column(name="unidadEnStock", nullable=false)
    public int getUnidadEnStock() {
        return this.unidadEnStock;
    }
    
    public void setUnidadEnStock(int unidadEnStock) {
        this.unidadEnStock = unidadEnStock;
    }

    
    @Column(name="precioCompra", nullable=false, precision=13)
    public double getPrecioCompra() {
        return this.precioCompra;
    }
    
    public void setPrecioCompra(double precioCompra) {
        this.precioCompra = precioCompra;
    }

    
    @Column(name="precioVenta", nullable=false, precision=13)
    public double getPrecioVenta() {
        return this.precioVenta;
    }
    
    public void setPrecioVenta(double precioVenta) {
        this.precioVenta = precioVenta;
    }

    
    @Column(name="oferta", nullable=false, precision=2)
    public double getOferta() {
        return this.oferta;
    }
    
    public void setOferta(double oferta) {
        this.oferta = oferta;
    }

    
    @Column(name="descripcion", nullable=false, length=65535)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fechaVto", length=19)
    public Date getFechaVto() {
        return this.fechaVto;
    }
    
    public void setFechaVto(Date fechaVto) {
        this.fechaVto = fechaVto;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastUpdate", length=19)
    public Date getLastUpdate() {
        return this.lastUpdate;
    }
    
    public void setLastUpdate(Date lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    
    @Column(name="userUpdate", nullable=false)
    public int getUserUpdate() {
        return this.userUpdate;
    }
    
    public void setUserUpdate(int userUpdate) {
        this.userUpdate = userUpdate;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="producto")
    public List<Iva> getIvas() {
        return this.ivas;
    }
    
    public void setIvas(List<Iva> ivas) {
        this.ivas = ivas;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="producto")
    public List<Detalle> getDetalles() {
        return this.detalles;
    }
    
    public void setDetalles(List<Detalle> detalles) {
        this.detalles = detalles;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 97 * hash + this.idProducto;
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Producto other = (Producto) obj;
        if (this.idProducto != other.idProducto) {
            return false;
        }
        return true;
    }




}


