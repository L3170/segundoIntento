package com.ar.facturacion.model;
// Generated 16/02/2020 19:22:30 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cbtesasoc generated by hbm2java
 */
@Entity
@Table(name="cbtesasoc",catalog="tesis")
public class Cbtesasoc  implements java.io.Serializable {
     private int numero;
     private Comprador comprador;
     private Concepto concepto;
     private Ctetipo ctetipo;
     private Fecaereq fecaereq;
     private Ptoventa ptoventa;
     private Responsabletipo responsabletipo;
     private Tipomoneda tipomoneda;
     private Usuario usuario;
     private String cuit;
     private Date fchAlta;
     private String estado;
     private List<Detalle> detalles = new ArrayList<Detalle>();

    public Cbtesasoc() {
    }

	
    public Cbtesasoc(int numero,Comprador comprador, Concepto concepto, Ctetipo ctetipo, Fecaereq fecaereq, Ptoventa ptoventa, Responsabletipo responsabletipo, Tipomoneda tipomoneda, Usuario usuario, String cuit, Date fchAlta, String estado) {
        this.numero = numero;
        this.comprador = comprador;
        this.concepto = concepto;
        this.ctetipo = ctetipo;
        this.fecaereq = fecaereq;
        this.ptoventa = ptoventa;
        this.responsabletipo = responsabletipo;
        this.tipomoneda = tipomoneda;
        this.usuario = usuario;
        this.cuit = cuit;
        this.fchAlta = fchAlta;
        this.estado = estado;
    }
    public Cbtesasoc(int numero,Comprador comprador, Concepto concepto, Ctetipo ctetipo, Fecaereq fecaereq, Ptoventa ptoventa, Responsabletipo responsabletipo, Tipomoneda tipomoneda, Usuario usuario, String cuit, Date fchAlta, String estado, List<Detalle> detalles) {
       this.numero = numero;
       this.comprador = comprador;
       this.concepto = concepto;
       this.ctetipo = ctetipo;
       this.fecaereq = fecaereq;
       this.ptoventa = ptoventa;
       this.responsabletipo = responsabletipo;
       this.tipomoneda = tipomoneda;
       this.usuario = usuario;
       this.cuit = cuit;
       this.fchAlta = fchAlta;
       this.estado = estado;
       this.detalles = detalles;
    }
   
    @Id 
    @Column(name="numero", unique=true, nullable=false)
    public int getNumero() {
        return this.numero;
    }
    
    public void setNumero(int numero) {
        this.numero = numero;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="comprador", nullable=false)
    public Comprador getComprador() {
        return this.comprador;
    }
    
    public void setComprador (Comprador comprador) {
        this.comprador = comprador;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="concepto", nullable=false)
    public Concepto getConcepto() {
        return this.concepto;
    }
    
    public void setConcepto(Concepto concepto) {
        this.concepto = concepto;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tipo", nullable=false)
    public Ctetipo getCtetipo() {
        return this.ctetipo;
    }
    
    public void setCtetipo(Ctetipo ctetipo) {
        this.ctetipo = ctetipo;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="feCAEReq")
    public Fecaereq getFecaereq() {
        return this.fecaereq;
    }
    
    public void setFecaereq(Fecaereq fecaereq) {
        this.fecaereq = fecaereq;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ptoVenta", nullable=false)
    public Ptoventa getPtoventa() {
        return this.ptoventa;
    }
    
    public void setPtoventa(Ptoventa ptoventa) {
        this.ptoventa = ptoventa;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tipoResponsable", nullable=false)
    public Responsabletipo getResponsabletipo() {
        return this.responsabletipo;
    }
    
    public void setResponsabletipo(Responsabletipo responsabletipo) {
        this.responsabletipo = responsabletipo;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="tipoMoneda", nullable=false)
    public Tipomoneda getTipomoneda() {
        return this.tipomoneda;
    }
    
    public void setTipomoneda(Tipomoneda tipomoneda) {
        this.tipomoneda = tipomoneda;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idUsuario", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    
    @Column(name="cuit", nullable=false, length=11)
    public String getCuit() {
        return this.cuit;
    }
    
    public void setCuit(String cuit) {
        this.cuit = cuit;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fchAlta", nullable=false, length=19)
    public Date getFchAlta() {
        return this.fchAlta;
    }
    
    public void setFchAlta(Date fchAlta) {
        this.fchAlta = fchAlta;
    }

    
    @Column(name="estado", nullable=false, length=9)
    public String getEstado() {
        return this.estado;
    }
    
    public void setEstado(String estado) {
        this.estado = estado;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="cbtesasoc")
    public List<Detalle> getDetalles() {
        return this.detalles;
    }
    
    public void setDetalles(List<Detalle> detalles) {
        this.detalles = detalles;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 67 * hash + this.numero;
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Cbtesasoc other = (Cbtesasoc) obj;
        if (this.numero != other.numero) {
            return false;
        }
        return true;
    }




}


