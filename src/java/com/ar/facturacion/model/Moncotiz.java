package com.ar.facturacion.model;
// Generated 02/02/2020 19:45:42 by Hibernate Tools 4.3.1


import java.util.Objects;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Moncotiz generated by hbm2java
 */
@Entity
@Table(name="moncotiz",catalog="tesis")
public class Moncotiz  implements java.io.Serializable {
     private String monId;
     private Tipomoneda tipomoneda;
     private double monCotiz;
     private String fchCotiz;

    public Moncotiz() {
    }
    public Moncotiz(Tipomoneda tipomoneda, double monCotiz, String fchCotiz) {
       this.tipomoneda = tipomoneda;
       this.monCotiz = monCotiz;
       this.fchCotiz = fchCotiz;
    }
   
    @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="tipomoneda"))@Id @GeneratedValue(generator="generator")
    @Column(name="monId", unique=true, nullable=false, length=3)
    public String getMonId() {
        return this.monId;
    }
    
    public void setMonId(String monId) {
        this.monId = monId;
    }

    @OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public Tipomoneda getTipomoneda() {
        return this.tipomoneda;
    }
    
    public void setTipomoneda(Tipomoneda tipomoneda) {
        this.tipomoneda = tipomoneda;
    }

    
    @Column(name="monCotiz", nullable=false, precision=6, scale=6)
    public double getMonCotiz() {
        return this.monCotiz;
    }
    
    public void setMonCotiz(double monCotiz) {
        this.monCotiz = monCotiz;
    }

    
    @Column(name="fchCotiz", nullable=false, length=8)
    public String getFchCotiz() {
        return this.fchCotiz;
    }
    
    public void setFchCotiz(String fchCotiz) {
        this.fchCotiz = fchCotiz;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(this.monId);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Moncotiz other = (Moncotiz) obj;
        if (!Objects.equals(this.monId, other.monId)) {
            return false;
        }
        return true;
    }




}


